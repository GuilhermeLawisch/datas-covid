import Head from 'next/head'
import { useEffect, useState } from 'react';
import React from "react";
import { motion, AnimateSharedLayout, AnimatePresence } from "framer-motion";
import cx from 'classnames';

type IdataTotal = {
  ID: string,
  Country: string,
  CountryCode: string,
  Province: string,
  City: string,
  CityCode: string,
  Lat: string,
  Lon: string,
  Confirmed: number,
  Deaths: number,
  Recovered: number,
  Active: number,
  Date: string
}

export default function Home() {
  const [dataTotal, setdataTotal] = useState<any>([])
  const [dataUF, setDataUF] = useState<any>([])

  let south: any[] = []
  let southeast: any[] = []
  let midwest: any[] = []
  let northeast: any[] = []
  let north: any[] = []

  useEffect(() => {
    fetch(`https://api.covid19api.com/country/brazil?from=2021-07-01T00:00:00Z&to=2021-07-01T00:30:00Z`)
      .then(response => response.json())
      .then(dataTotal => {
        setdataTotal(dataTotal)
      })
    
    fetch(`https://api.covid19api.com/live/country/brazil/status/confirmed/date/2021-07-02T13:13:30Z`)
      .then(response => response.json())
      .then(dataUF => {
        setDataUF(dataUF)
        console.log(dataUF.length)
      })

  }, [])

  dataUF.map((value:any) => {
      switch (value.Province) {
        case 'Rio Grande do Sul':
        case 'Santa Catarina':
        case 'Parana':
          south.push(value)
          break;
        case 'Espirito Santo':
        case 'Minas Gerais':
        case 'Rio de Janeiro':
        case 'Sao Paulo':
          southeast.push(value)
          break;
        case 'Goias': 
        case 'Mato Grosso': 
        case 'Mato Grosso do Sul': 
        case 'Distrito Federal':
          midwest.push(value)
          break;
        case 'Alagoas':
        case 'Bahia': 
        case 'Ceara': 
        case 'Maranhao': 
        case 'Piaui': 
        case 'Pernambuco': 
        case 'Paraiba': 
        case 'Rio Grande do Norte':
        case 'Sergipe':
          northeast.push(value)
          break;
        case 'Acre': 
        case 'Amazonas': 
        case 'Amapa': 
        case 'Para': 
        case 'Rondonia': 
        case 'Roraima':
        case 'Tocantins':
          north.push(value)
          break;
        default:
          break;
      }
  })

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main>{
        dataTotal.map((value: IdataTotal) => {
          return (
            <div className="data-total" key={value.ID}>
              <div className="grid">
                <h1 className="title">Brasil</h1>
                <p className="left">{ value.Confirmed } Confirmados</p>
                <p className="main">{ value.Deaths } Mortes</p>
                <p className="right">{ value.Recovered } Recuperados</p>
                <p className="center">{ value.Active } Ativos</p>
                {/* <p className="bottom">{ value.Date } </p> */}
              </div>
            </div>
          )
        })
      }</main>

      <section>
        <AnimateSharedLayout>
          <motion.ul layout initial={{ borderRadius: 25 }}>
            <motion.h2 layout >Sul</motion.h2>
            {south.map((item:any, index: any)  => (
              <Item key={index} data={item}/>
            ))}
          </motion.ul>
        </AnimateSharedLayout>

        <AnimateSharedLayout>
          <motion.ul layout initial={{ borderRadius: 25 }}>
            <motion.h2 layout >Sudeste</motion.h2>
            {southeast.map((item:any, index: any)  => (
              <Item key={index} data={item}/>
            ))}
          </motion.ul>
        </AnimateSharedLayout>

        <AnimateSharedLayout>
          <motion.ul layout initial={{ borderRadius: 25 }}>
            <motion.h2 layout >Centro-Oeste</motion.h2>
            {midwest.map((item:any, index: any)  => (
              <Item key={index} data={item}/>
            ))}
          </motion.ul>
        </AnimateSharedLayout>

        <AnimateSharedLayout>
          <motion.ul layout initial={{ borderRadius: 25 }}>
            <motion.h2 layout >Nordeste</motion.h2>
            {northeast.map((item:any, index: any)  => (
              <Item key={index} data={item}/>
            ))}
          </motion.ul>
        </AnimateSharedLayout>

        <AnimateSharedLayout>
          <motion.ul layout initial={{ borderRadius: 25 }}>
            <motion.h2 layout >Norte</motion.h2>
            {north.map((item:any, index: any)  => (
              <Item key={index} data={item}/>
            ))}
          </motion.ul>
        </AnimateSharedLayout>
      </section>
    </>
  );
}

type IPropsItem = {
  data: {
    ID: string,
    Country: string,
    CountryCode: string,
    Province: string,
    City: string,
    CityCode: string,
    Lat: string,
    Lon: string,
    Confirmed: number,
    Deaths: number,
    Recovered: number,
    Active: number,
    Date: string
  }
}

function Item(props: IPropsItem) {
  const [isOpen, setIsOpen] = useState(false);

  const toggleOpen = () => setIsOpen(!isOpen);

  return (
    <motion.li layout onClick={toggleOpen} initial={{ borderRadius: 10 }} >
      <motion.div layout className="motion-div-flex" >
        <motion.h2 layout >{ props.data.Province }</motion.h2>
        <svg height="20" width="20" className={cx(
            'svg-polyline',
            { isOpen }
          )}>
          <polyline className="polyline" points="0,2 17,2 17,20" />
        </svg>
      </motion.div>
      
      <AnimatePresence>{isOpen && <Content data={props.data}/>}</AnimatePresence>
    </motion.li>
  );
}

function Content(props: IPropsItem) {
  return (
    <motion.div
      layout
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
    >
      <motion.p className="pMotion">{ props.data.Confirmed } Confirmados</motion.p>
      <motion.p className="pMotion">{ props.data.Deaths } Mortes</motion.p>
      <motion.p className="pMotion">{ props.data.Recovered } Recuperados</motion.p>
      <motion.p className="pMotion">{ props.data.Active } Ativos</motion.p>
    </motion.div>
  );
}